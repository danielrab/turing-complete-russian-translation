

$11038144815919*
Этот уровень использует программы чтобы тестировать ваши схемы. Когда программы выполняются, этот уровень проверяет что подключенные компоненты ведут себя так как вы ожидаете.

В лаборатории есть 2 дополнительных ключевых слова.

Ключевое слово [color=#c54d5e]expect[/color] используется чтобы указать какое значение адрес в памяти должен иметь на следующий такт.

Первое число после [color=#c54d5e]expect[/color] это индекс подключенного компонента, второе число это ожидаемое значение. Индексы подключенных компонентов это просто порядок в котором компоненты подключены к компоненту программы.

[img]dialogue/watched_state.png[/img]

Например:
[code][color=#c54d5e]expect[/color] [color=#eb9433]2[/color] [color=#eb9433]4[/color]
[color=#4a9658]copy[/color] [color=#eb9433]4[/color] [color=#4a9658]_[/color] [color=#4a9658]r2[/color][/code]

В этом примере, первая строка, что мы ожидаем, что 2-ой подключенный компонент будет иметь значение 4 на следующем такте.

Все подключенные компоненты проверяются на соответствие ожиданиям каждый такт. Ожидается что все подключенные компоненты будут иметь значение 0 на момент начала программы, ожидания для компонентов памяти меняются только если вы с обновляете ожидания. Единственное исключение это счётчики, от которых ожидается что они будут увеличивать своё значение каждый такт.

Второе ключевое слово в лаборатории это [color=#c54d5e]set_input[/color]. С его помощью вы можете контролировать вход компьютера:
[color=#c54d5e]set_input[/color] [color=#eb9433]123[/color]

Вы также можете в любое время (ре)импортировать примеры тестоа нажав на кнопку ниже:
[url=import_overture][color=#e49f44]OVERTURE[/color][/url]
$32399229965611* Also, since you have now completed [color=#e49f44]LEG[/color], I have unlocked all the 16, 32 and 64 bit components that you have in the sandbox.
$15446846177093* Welcome to the lab. Like the component factory, this is not a normal level but a tool.
$16072814175447* Программирование на глючном железе очень раздражает. Сложно вдруг начинать думать о схемах, когда вы посреди решения программной задачи. Вам может захотеться быстренько применить заплатку, чтобы вернуться к решению исходной задачи. Но эта заплатка сломает что-то ещё в программе которая раньше работала и так может продолжаться до бесконечности. Поэтому, когда разрабатываете железо, стремитесь к 100% надёжности прежде чем начинать программировать!


